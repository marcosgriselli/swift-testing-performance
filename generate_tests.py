#!/usr/bin/env python3

import argparse


_TEST_FILE = "PerformanceTests/PerformanceTests.swift"


def _generate_xctest_tests(test_count: int) -> None:
    with open(_TEST_FILE, "w") as f:
        f.write(
            f"""// This file is generated by generate_tests.py
import XCTest
                
final class CompilePerformanceTests: XCTestCase {{
        """
        )
        for i in range(test_count):
            f.write(
                f"""
    func testExample{i}() {{
        XCTAssert({i} == {i})
    }}
    """
            )
        f.write("}\n")


def _generate_swift_testing_tests(test_count: int) -> None:
    with open(_TEST_FILE, "w") as f:
        f.write(
            f"""// This file is generated by generate_tests.py
import Testing
                    
struct CompilePerformanceTests {{
        """
        )
        for i in range(test_count):
            f.write(
                f"""
    @Test
    func testExample{i}() {{
        #expect({i} == {i})
    }}
    """
            )
        f.write("}\n")


def _generate_tests(framework: str, test_count: int) -> None:
    test_generator = {
        "xctest": _generate_xctest_tests,
        "swift-testing": _generate_swift_testing_tests,
    }

    test_generator[framework](test_count)


def _build_parser() -> argparse.ArgumentParser:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--framework",
        help="The testing framework to use (xctest, swift-testing)",
        choices=["xctest", "swift-testing"],
        required=True,
    )
    parser.add_argument(
        "--test_count", help="The number of tests to generate", type=int, required=True
    )
    return parser


def _main(args: argparse.Namespace) -> None:
    if not args.framework or not args.test_count:
        SystemError("--framework and --test-count are required")

    framework = args.framework.lower()
    test_count = int(args.test_count)
    _generate_tests(framework, test_count)


if __name__ == "__main__":
    _main(_build_parser().parse_args())
